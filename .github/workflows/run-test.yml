name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest]
        php: [8.4, 8.3, 8.2]
        laravel: [12.*, 11.*]
        stability: [prefer-lowest, prefer-stable]
        include:
          - laravel: 12.*
            testbench: 10.*
          - laravel: 11.*
            testbench: 9.*

    runs-on: ${{ matrix.os }}

    name: L${{ matrix.laravel }} - ${{ matrix.stability }} - P${{ matrix.php }} - ${{ matrix.os }}

    env:
      php-extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
      key: ${{ matrix.os }}_Laravel${{ matrix.laravel }}_${{ matrix.stability }}_Php${{ matrix.php }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP extensions cache
        id: phpextcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.php-extensions }}
          key: ${{ env.key }}

      - name: "Determine composer cache directory"
        id: "composer-cache-directory"
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

      - name: Cache php extensions & composer downloads
        uses: actions/cache@v4
        with:
          key: ${{ env.key }}
          path: |
            ${{ steps.phpextcache.outputs.dir }}
            ${{ steps.composer-cache-directory.outputs.directory }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.php-extensions }}
          coverage: xdebug

      - name: Debug PHP & coverage
        run: |
          php -v
          php -m | grep -Ei 'xdebug|pcov' || true
          php -r 'echo getenv("XDEBUG_MODE") ?: "(no XDEBUG_MODE)"; echo PHP_EOL;'

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update --dev
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: Execute tests
        env:
          XDEBUG_MODE: coverage
        run: composer test-coverage
